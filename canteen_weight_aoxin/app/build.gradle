plugins {
    id 'com.android.application'
    id 'org.greenrobot.greendao'
    id 'org.jetbrains.kotlin.android'
}
//当前编译的flavor
def currentFlavor = "canteen_weight_aoxin_portrait"
task initCurrentFlavor(dependsOn: sourceSets) {
    def taskRequest = gradle.getStartParameter().getTaskRequests().toString().toLowerCase()
    println("当前构建的设备为 taskRequest： " + taskRequest)
    if (taskRequest.contains("canteen_weight_aoxin_portrait")) {
        currentFlavor = "canteen_weight_aoxin_portrait"
    }

    println("当前构建的设备为： " + currentFlavor)
}

//编译后apk名字携带信息(commitId + date)
def gitMainSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitCommonSha = 'git -C common rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitDeviceInterfaceSha = 'git -C deviceinterface rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitDeviceImplSha = ''
if (gitMainSha.isEmpty()) {
    gitMainSha = 'git rev-parse --short HEAD'.execute().text.trim()
    gitCommonSha = 'git -C common rev-parse --short HEAD'.execute().text.trim()
    gitDeviceInterfaceSha = 'git -C deviceinterface rev-parse --short HEAD'.execute().text.trim()
        gitDeviceImplSha = "git -C ${currentFlavor} rev-parse --short HEAD".execute().text.trim()
} else {

        gitDeviceImplSha = "git -C ${currentFlavor} rev-parse --short HEAD".execute([], project.rootDir).text.trim()
}
def gitSha = gitMainSha + "_" + gitCommonSha + "_" + gitDeviceInterfaceSha + "_" + gitDeviceImplSha
println("--gitSha--" + gitSha)
def buildDate = new Date().format("yyyy-MM-dd HH:mm", TimeZone.getTimeZone("GMT+08:00"))

android {
    namespace 'com.stkj.aoxin.weight'
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.stkj.aoxin.weight.portrait"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode 100
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "arm64-v8a"
        }
        buildConfigField "String", "GIT_SHA", "\"" + gitSha + "\""
        buildConfigField "String", "BUILD_TIME", "\"" + buildDate + "\""
    }

    signingConfigs {
        canteen_weight_aoxin_portrait {
            keyAlias 'platform'
            keyPassword 'android'
            storeFile file('../../canteen_weight_aoxin_portrait/platform.jks')
            storePassword 'android'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig release.signingConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android.buildFeatures.buildConfig true

    flavorDimensions = ["device"]
    productFlavors {

        canteen_weight_aoxin_portrait {
            dimension "device"
            buildConfigField('String', 'deviceInterface', '\"com.stkj.device.canteen_weight_aoxin_portrait.DeviceImpl\"')
            buildConfigField('String', 'deviceType', '\"cashier_canteen_weight_aoxin_portrait\"')
            manifestPlaceholders = [
                    shareUserId: "android.uid.system"
            ]
            signingConfig signingConfigs.canteen_weight_aoxin_portrait
        }
    }

    android.applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "stkjcashier_${variant.flavorName}_v${variant.versionName}_${variant.buildType.name}_${gitMainSha}.apk"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {
    //other dependencies

    //-------------- 模块依赖library --------------
    //基础通用模块
    api project(path: ':common')
    //硬件设备接口(不同设备实现该模块)
    api project(path: ':deviceinterface')

    //不同设备不同实现
    if ("canteen_weight_aoxin_portrait" == currentFlavor) {
        implementation project(path: ':canteen_weight_aoxin_portrait')
    }

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    implementation 'com.github.michaelye.easydialog:easydialog:1.4'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'top.zibin:Luban:1.1.8'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.activity:activity:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation files('libs\\sdkapi.jar')
    //调试相关
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation 'io.github.xmaihh:serialport:2.1.1'
}

greendao {
    schemaVersion 1 // 数据库版本号
    daoPackage 'com.stkj.aoxin.weight.base.greendao.generate'  // 设置 DaoMaster、DaoSession、Dao 包名
    targetGenDir 'src/main/java'  // 设置 DaoMaster、DaoSession、Dao 目录
}